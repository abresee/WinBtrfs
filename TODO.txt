TODO list

Roadmap:
Get directory listings and file info working (fs tree queries)
Get file data working (extents)
- Remove Dokan callbacks that should never be called
Esoteric Btrfs stuff
- Compression (zlib)
- Subvolumes
- Multi-drive volumes
- Converted ext4 fs
GUI (C#: which .NET version?)
Installer (NSIS)
MinGW/Cygwin[/Mono] build support
UI translations
Old OS testing

Code stuff:
Rectify inconsistent struct member names: num/nr, csum/cSum/crc32c/etc, generation/gen, objectID/objID, len/length
Rectify inconsistent function arg names: len/length, addr/lAddr/logicalAddr/physAddr/etc, super/SB/superblock
Cache frequently used blocks in memory, especially FS tree nodes and other trees that are references multiple times (extent tree?)
Multithread support for everything: make block reading threadsafe, and ensure that calls to btrfs_filesystem.c functions
	from different threads will not cause serious race conditions and/or destruction
Check all malloc/realloc calls and end fatally upon malloc failure
Develop a better system for error reporting than just piling on a bunch of assertions (look up assert best practices)

Next steps:
Refactor parseNode* so it's not so damn obtuse to use
Implement these:
- go from file/dir name to object ID (DIR_ITEM)
(repeat above for each filename/path component until at the end of the path)
- go from object ID to inode (INODE_ITEM)
[the above should allow for getting an inode (and therefore, stat information) for a file/dir by path]
